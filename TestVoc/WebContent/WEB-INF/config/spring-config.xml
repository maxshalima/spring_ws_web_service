<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:sws="http://www.springframework.org/schema/web-services"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
							http://www.springframework.org/schema/web-services
							http://www.springframework.org/schema/web-services/web-services-2.0.xsd
							http://www.springframework.org/schema/context
							http://www.springframework.org/schema/context/spring-context-3.1.xsd
							http://www.springframework.org/schema/cache 
							http://www.springframework.org/schema/cache/spring-cache.xsd">

	<cache:annotation-driven />
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="vocabloryNamesList" />
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="dictionary" />
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="numberOfAllRecords" />
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="allRecordIdsFromVoc" />
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="record" />
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="allSortedVocabloryRecords" />
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="searchRecords" />

				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="recordCount" />
			</set>
		</property>
	</bean>

	<sws:interceptors>
		<bean id="validatingInterceptor"
			class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor">
			<property name="schema" value="RecordServiceOperations.xsd" />
			<property name="validateRequest" value="true" />
			<property name="validateResponse" value="false" />
		</bean>
	</sws:interceptors>

	<context:component-scan base-package="by.test.services" />
	<sws:annotation-driven />
	<bean id="RecordService"
		class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition"
		lazy-init="true">
		<property name="schemaCollection">
			<bean
				class="org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection">
				<property name="inline" value="true" />
				<property name="xsds">
					<list>
						<value>RecordServiceOperations.xsd</value>
					</list>
				</property>
			</bean>
		</property>
		<property name="portTypeName" value="RecordService" />
		<property name="serviceName" value="RecordServiceServices" />
		<property name="locationUri" value="/endpoints" />
	</bean>


</beans>